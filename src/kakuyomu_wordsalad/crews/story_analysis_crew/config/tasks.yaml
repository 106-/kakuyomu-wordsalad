evaluating_word_salad:
  description: |
    目的:
      指定されたカクヨム作品({work_id}) のエピソード({episode_id})を取得し、
      文意破綻（ワードサラダ）有無を厳格に評価する。

    入力:
      - work_id: カクヨム作品ID
      - episode_id: エピソードID

    手順:
      - 取得:
         - カクヨムMCPで {work_id}/{episode_id} の本文を直接取得する。
         - 取得失敗時は理由を明示し、低信頼で評価を続行。
      - 評価（各0–5点）:
         - 全体的無意味性, 理解不能表現の多さ, 文章の流れの不自然さ, 文章全体の稚拙さ。
         - 参考チェック: 主述不一致/係り受け破綻/接続助詞誤用/指示語先行詞欠落/視点飛躍/語彙の乱れ 等。
      - 根拠抽出:
         - 問題箇所を最大3件、各「原文抜粋（最大50文字）」＋「簡潔な説明」で提示。
      - 判定:
         - 判定規則:
           * 2軸以上が4以上 ⇒ 「文章破綻」
           * 1軸が3以上、または合計7以上 ⇒ 「要注意」
           * 上記以外 ⇒ 「問題なし」
      - 出力:
         - 「EpisodeVerdict スキーマ」に準拠したJSONを返す。

    失敗時の扱い:
      - 本文未取得/空/極端に短い場合は verdict を「要注意」とし、reasons に明記、confidence を低めに設定。

    制約:
      - 引用は最大3件・各50文字まで。ネタバレは厭わず、正確さを優先する。
      - 方言・口語・スラングは文脈で意味が通る場合は減点しない。
      - reason, explanationは日本語で記述する。

  agent: word_salad_reviewer

  expected_output: |
    EpisodeVerdict スキーマ（JSON Schema相当・簡易）:
      type: object
      required: [work_id, episode_id, verdict, reasons, metrics, evidence, evaluated_at, confidence]
      properties:
        work_id: { type: string }
        episode_id: { type: string }
        verdict: { type: string, enum: ["問題なし", "要注意", "文章破綻"] }
        reasons: { type: array, items: { type: string }, minItems: 1 }
        metrics:
          type: object
          properties:
            global_incoherence: { type: integer, minimum: 0, maximum: 5 }
            unreadable_expressions: { type: integer, minimum: 0, maximum: 5 }
            unnatural_flow: { type: integer, minimum: 0, maximum: 5 }
          additionalProperties: false
        evidence:
          type: array
          maxItems: 3
          items:
            type: object
            required: [span, explanation]
            properties:
              span: { type: string, description: "原文抜粋。最大50文字。" }
              explanation: { type: string, description: "問題点の簡潔な説明。" }
        evaluated_at: { type: string, description: "ISO 8601日時（JST推奨）" }
        confidence: { type: number, minimum: 0, maximum: 1 }
      additionalProperties: false

    例（出力イメージ）:
      {
        "work_id": "{work_id}",
        "episode_id": "{episode_id}",
        "verdict": "要注意",
        "reasons": ["参照の曖昧さと接続不整合が散見される"],
        "metrics": {
          "global_incoherence": 2,
          "unreadable_expressions": 3,
          "unnatural_flow": 2
        },
        "evidence": [
          {
            "span": "夜の階段が笑う温度が、こぼれた季節の端数",
            "explanation": "語と語の関係が不明確で比喩が機能していない"
          }
        ],
        "evaluated_at": "2025-09-13T12:00:00+09:00",
        "confidence": 0.72
      }

aggregate_word_salad:
  description: |
    目的:
      EpisodeVerdict（各話判定のJSON）配列から全体の傾向と総合判定を導出する。

    入力:
      - episode_verdicts: EpisodeVerdict の配列（context から供給）

    手順:
      - 検証:
         - 各要素が EpisodeVerdict スキーマ（work_id, episode_id, verdict, reasons, metrics, evidence,
           evaluated_at, confidence）に合致するか確認。不整合要素は除外し、除外理由を overall_reasons に明記。
      - 分布集計:
         - verdict の件数を数える（「問題なし」「要注意」「文章破綻」）。
      - 軸のカテゴリ化（多数決のみ）:
         - 各話の metrics を Low(0–1)/Medium(2–3)/High(4–5) に丸める。
         - シリーズ水準は出現が最も多いカテゴリ。タイは High > Medium > Low。
      - 注目話の抽出（ルールのみ）:
         - 「文章破綻」の話。
         - または、3軸中2軸以上が High（>=4）に該当する話。
         - 上記から最大3話。
      - 頻出理由の抽出（簡易正規化・カウントのみ）:
         - reasons を表記ゆれ統合（全角/半角・類義語の統合は簡易に）し、上位から最大5件を列挙。
         - 順位付けや出現割合は不要（列挙のみ）。
      - 総合判定:
         - 「総合判定規則」に従って verdict を決定し、根拠（どのルールに一致したか）を列挙。
      - 出力:
         - 下記 SeriesAggregation スキーマに準拠した JSON を返す。

    注意・制約:
      - 代表例の引用は最大3件・各50文字以内。ネタバレは厭わず正確さを最優先する。
      - 単話のみでも、重要な単話評価(極めておかしいなど)があれば無視せず総合評価に注記する。

  agent: word_salad_aggregator

  expected_output: |
    SeriesAggregation スキーマ（統計排除版・JSON Schema相当・簡易）:
      type: object
      required: [work_id, episode_ids, episode_count, distribution,
                 axis_levels, notable_episodes, top_reasons,
                 representative_evidence, overall_verdict, overall_reasons,
                 actions, evaluated_at, confidence]
      properties:
        work_id: { type: string }
        episode_ids: { type: array, items: { type: string } }
        episode_count: { type: integer, minimum: 1 }
        distribution:
          type: object
          description: "verdict の件数（比率は不要）"
          properties:
            問題なし: { type: integer, minimum: 0 }
            要注意:   { type: integer, minimum: 0 }
            文章破綻: { type: integer, minimum: 0 }
          additionalProperties: false
        axis_levels:
          type: object
          description: "各軸のシリーズ水準（Low/Medium/High；多数決で決定）"
          properties:
            global_incoherence: { type: string, enum: ["Low","Medium","High"] }
            unreadable_expressions: { type: string, enum: ["Low","Medium","High"] }
            unnatural_flow: { type: string, enum: ["Low","Medium","High"] }
          additionalProperties: false
        notable_episodes:
          type: array
          description: "注目話（文章破綻 or 2軸以上がHigh）。最大3件"
          maxItems: 3
          items:
            type: object
            required: [episode_id, reason]
            properties:
              episode_id: { type: string }
              reason: { type: string }
        top_reasons:
          type: array
          description: "頻出の問題理由（最大5件・順位不要）"
          maxItems: 5
          items: { type: string }
        representative_evidence:
          type: array
          description: "代表例（最大3件・各50文字以内）"
          maxItems: 3
          items:
            type: object
            required: [span, explanation]
            properties:
              span: { type: string }
              explanation: { type: string }
        overall_verdict: { type: string, enum: ["問題なし", "要注意", "文章破綻"] }
        overall_reasons:
          type: array
          items: { type: string }
          minItems: 1
        actions:
          type: array
          description: "推奨アクション（最大5件、優先度付き）"
          maxItems: 5
          items:
            type: object
            required: [title, priority]
            properties:
              title: { type: string }
              priority: { type: string, enum: ["High","Medium","Low"] }
        evaluated_at: { type: string, description: "ISO 8601日時（JST推奨）" }
        confidence: { type: number, minimum: 0, maximum: 1, description: "離散値のみ（0.9/0.8/0.7/0.6 等）" }
      additionalProperties: false

    例（出力イメージ）:
      {
        "work_id": "{work_id}",
        "episode_ids": ["1","2","3","4","5","6","7","8","9","10"],
        "episode_count": 10,
        "distribution": { "問題なし": 6, "要注意": 3, "文章破綻": 1 },
        "axis_levels": {
          "global_incoherence": "Medium",
          "unreadable_expressions": "High",
          "unnatural_flow": "Medium"
        },
        "notable_episodes": [
          {"episode_id": "7", "reason": "2軸以上がHigh（>=4）"},
          {"episode_id": "9", "reason": "verdict=文章破綻"}
        ],
        "top_reasons": ["指示語の先行詞不明", "接続不整合", "比喩の機能不全"],
        "representative_evidence": [
          {"span": "夜の階段が笑う温度の端数", "explanation": "語同士の関係が曖昧で意味が復元できない"}
        ],
        "overall_verdict": "要注意",
        "overall_reasons": [
          "（要注意＋文章破綻）件数が問題なし件数に拮抗",
          "unreadable_expressions が High（多数決）"
        ],
        "actions": [
          {"title": "指示語の先行詞明示ルールの導入", "priority": "High"},
          {"title": "接続助詞の誤用チェックリスト運用", "priority": "Medium"}
        ],
        "evaluated_at": "2025-09-16T12:00:00+09:00",
        "confidence": 0.7
      }

